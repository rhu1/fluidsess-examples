//$ ~/scribbler/scribble/scribblec-assrt.sh -assrt -fair -z3 -batch OnlineWallet.scr
//$ sessionstar OnlineWallet.scr OnlineWallet C

module OnlineWallet;

type <fstar> "int" from "..." as int;
type <fstar> "string" from "..." as //string;
  String;

global protocol OnlineWallet(role S, role C, role A) {
  ////login(id: String, pw: String) from C to A;
  //login(id: String) from C to A;
  login(id: int) from C to A;
  password(pw: int) from C to A;
  choice at A {
    login_ok() from A to C;
    login_ok() from A to S;
    //account(balance: int, overdraft: int) from S to C; @"balance>=0 && overdraft>=0"
    account(balance: int) from S to C; @"balance>=0"
    ov(overdraft: int) from S to C; @"overdraft>=0"
    ////do Authenticated(S, C, A); @"<balance+overdraft, balance>"  // FIXME: scrib arity check
    //do Authenticated(S, C, A); @"<balance+overdraft>"
    do Authenticated(S, C, A); @"<balance+overdraft, overdraft, balance>"
  } or {
    //login_fail(error: String) from A to C;
    login_fail(error: int) from A to C;
    login_fail() from A to S;
  }
}

/*
aux global protocol Authenticated(role S, role C, role A) @"<allowance:C=0> allowance>=0" {  // TODO: track balance/overdaft as well
  choice at C {
    //pay(payee: String, amount: int) from C to S; @"amount<=allowance"
    pay(amount: int) from C to S; @"amount<=allowance"  // N.B. amount first
    payee(payee: String) from C to S;
    pay_auth() from C to A;
    //account(newbalance: int, newoverdraft: int) from S to C; @"newbalance>=0 && newoverdraft>=0"
    account(newbalance: int) from S to C; @"newbalance>=0"  // FIXME: point is allowance >= balance+overdraft, so balance can be neg
    account(newoverdraft: int) from S to C; @"newoverdraft>=0"
    do Authenticated(S, C, A); @"<newbalance + newoverdraft>"
  } or {
    quit() from C to S;
    quit() from C to A;
  }
}
//*/

//*
aux global protocol Authenticated(role S, role C, role A)
      @"<allowance:C=0, overdraft1:S=0, balance1:S=0> allowance>=0 && overdraft1>=0 && balance1=allowance-overdraft1)" {
      //@"<allowance:C=0, overdraft1:S=0, balance1:S=0> allowance=balance1+overdraft1 && overdraft1>=0 && balance1>=(0-overdraft1)" {
  choice at C {
    pay(amount: int) from C to S; @"amount<=allowance"  // N.B. amount first
    //payee(payee: String) from C to S;
    payee(payee: int) from C to S;
    pay_auth() from C to A;
    account(newbalance: int) from S to C; @"newbalance=balance1-amount"  // CHECKME: practices: "static" knowledge potentially obsoletes some messages?
    account(newoverdraft: int) from S to C; @"newoverdraft=overdraft1"  // CHECKME: weird for overdraft to change
    do Authenticated(S, C, A); @"<allowance-amount, overdraft1, newbalance>"
    //do Authenticated(S, C, A); @"<newbalance+overdraft1, overdraft1, newbalance>"  // CHECKME: C doesn't know overdraft1, is that why this doesn't work?
  } or {
    quit() from C to S;
    quit() from C to A;
  }
}
//*/
